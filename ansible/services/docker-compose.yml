services:
  litellm:
    image: ghcr.io/berriai/litellm:main-stable
    container_name: litellm
    ports:
      - "127.0.0.1:4000:4000"
    volumes:
      - ../../config:/app/config:ro
    environment:
      - LITELLM_MASTER_KEY=${LITELLM_MASTER_KEY}
      - DATABASE_URL=${DATABASE_URL:-postgresql://litellm:${POSTGRES_PASSWORD:-litellm_password}@postgres:5432/litellm}
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_API_BASE=${AZURE_OPENAI_API_BASE}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    command: ["--config", "/app/config/values.yml", "--port", "4000", "--host", "0.0.0.0"]
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - nix-demo

  postgres:
    image: postgres:16-alpine
    container_name: postgres-db
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=litellm
      - POSTGRES_USER=litellm
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-litellm_password}
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U litellm -d litellm"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - nix-demo

# standalone db for file storage
  neo4j:
    image: neo4j:5.16.0-community
    container_name: graph-db
    ports:
      - "127.0.0.1:7474:7474"  # HTTP
      - "127.0.0.1:7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/import
      - neo4j_plugins:/plugins
      - ./neo4j-init:/docker-entrypoint-initdb.d
    environment:
      - NEO4J_AUTH=neo4j/secret
      - NEO4J_dbms_memory_heap_initial__size=1G
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_default_listen_address=0.0.0.0
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:7474"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - nix-demo

  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: openwebui
    ports:
      - "127.0.0.1:3000:8080"
    volumes:
      - openwebui_data:/app/backend/data
    environment:
      - OPENAI_API_BASE_URL=http://litellm:4000/v1
      - OPENAI_API_KEY=${LITELLM_MASTER_KEY}
      - WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY:-change_this_secret_key_in_production}
      - ENABLE_OPENAI_API=true
      - ENABLE_OLLAMA_API=false
      - WEBUI_AUTH=false
      - ENABLE_SIGNUP=true
      - DEFAULT_USER_ROLE=admin
      # Neo4j integration for document storage
      - NEO4J_URL=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=secret
      - ENABLE_RAG=true
    restart: unless-stopped
    depends_on:
      litellm:
        condition: service_started
      neo4j:
        condition: service_healthy
    networks:
      - nix-demo

networks:
  nix-demo:
    name: nix-demo

volumes:
  postgres_data:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  openwebui_data:
