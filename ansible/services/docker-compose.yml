services:
  caddy:
    build:
      context: ./caddy
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./config/Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    environment:
      - TAILSCALE_API_KEY=${TAILSCALE_API_KEY}
      - TAILSCALE_DOMAIN=${TAILSCALE_DOMAIN}
    networks:
      - nix-demo

  litellm:
    image: ghcr.io/berriai/litellm:main-stable
    container_name: litellm
    ports:
      - "4000:4000"
    volumes:
      - ./config:/app/config:ro
    env_file:
      - .env # Load local .env file
    environment:
      - LITELLM_MASTER_KEY=${LITELLM_MASTER_KEY}
      - LITELLM_SALT_KEY=${LITELLM_SALT_KEY}
      - DATABASE_URL=${DATABASE_URL}
    command: ["--config", "/app/config/values.yml", "--port", "4000", "--host", "0.0.0.0"]
    restart: unless-stopped
    networks:
      - nix-demo

# standalone db for file storage
  neo4j:
    image: neo4j:5.16.0-community
    container_name: graph-db
    ports:
      - "7474:7474"   # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/import
      - neo4j_plugins:/plugins
      - ./neo4j-init:/docker-entrypoint-initdb.d
    environment:
      - NEO4J_AUTH=neo4j/secret
      - NEO4J_dbms_memory_heap_initial__size=512m
      - NEO4J_dbms_memory_heap_max__size=1G
    restart: unless-stopped
    networks:
      - nix-demo

  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: openwebui
    ports:
      - "3000:8080"
    volumes:
      - openwebui_data:/app/backend/data
    environment:
      - OPENAI_API_KEY=${LITELLM_MASTER_KEY}
      - WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY}
      - ENABLE_OPENAI_API=true
      - WEBUI_AUTH=false
      - ENABLE_SIGNUP=true
      - DEFAULT_USER_ROLE=admin
      # Neo4j integration for document storage
      - NEO4J_URL=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=Youneverknow@123
      - ENABLE_RAG=true
    restart: unless-stopped
    depends_on:
      litellm:
        condition: service_started
      neo4j:
        condition: service_started
    networks:
      - nix-demo

networks:
  nix-demo:
    name: nix-demo

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  openwebui_data:
  caddy_data:
  caddy_config:
